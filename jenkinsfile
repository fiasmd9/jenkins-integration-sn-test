def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops_pipeline_demo_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
pipeline {
    agent any
    tools { 
        maven 'Maven' 
    }
    stages {
        stage("Build") {
            steps {
                echo "Building..."
                sh '/usr/local/bin/mvn clean install'
            }
        }
        stage("Test") {
            steps {
            	echo "Testing..."
                sh "/usr/local/bin/mvn test -Dpublish"
                junit "**/target/surefire-reports/*.xml"
            }
        }
        stage("Deploy") {
            stages {
                stage("Deploy to Cloud") {
                    steps {
                        echo "Deploying to Cloud.."
                        snDevOpsArtifact(artifactsPayload:"""{"artifacts": [
                            {"name": "demo1_cloud.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo1_cloud"},
                            {"name": "demo2_cloud.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo2_cloud"},
                            {"name": "demo3_cloud.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo3_cloud"},
                            {"name": "demo4_cloud.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo4_cloud"},
                            {"name": "demo5_cloud.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo5_cloud"}]}""")
                    }
                }
                stage("Deploy to Platform") {
                    parallel {
                        stage("Deploy to Mac") {
                            steps {
                                echo "Deploying to Mac.."
                                snDevOpsArtifact(artifactsPayload:"""{"artifacts": [
                                    {"name": "demo1_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo1_mac"},
                                    {"name": "demo2_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo2_mac"},
                                    {"name": "demo3_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo3_mac"},
                                    {"name": "demo4_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo4_mac"},
                                    {"name": "demo5_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo5_mac"}]}""")
                            }
                        }
                        stage("Deploy to Window") {
                            steps {
                                echo "Deploying to Window.."
                                snDevOpsArtifact(artifactsPayload:"""{"artifacts": [
                                    {"name": "demo1_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo1_win"},
                                    {"name": "demo2_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo2_win"},
                                    {"name": "demo3_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo3_win"},
                                    {"name": "demo4_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo4_win"},
                                    {"name": "demo5_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo5_win"}]}""")
                            }
                        }
                    }
                }
            }
        }
        stage("Prod") {
            parallel {
                stage("Prod to Mac") {
                    steps {
                        echo "Deploying to Prod Mac.."
                        snDevOpsPackage(name: "${packageName}-mac", artifactsPayload: """{"artifacts": [
                            {"name": "demo1_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo1_mac"},
                            {"name": "demo2_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo2_mac"},
                            {"name": "demo3_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo3_mac"},
                            {"name": "demo4_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo4_mac"},
                            {"name": "demo5_mac.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo5_mac"}]}""")
                    }
                }
                stage("Prod to Window") {
                    steps {
                        echo "Deploying to Prod Window.."
                        snDevOpsPackage(name: "${packageName}-win", artifactsPayload: """{"artifacts": [
                            {"name": "demo1_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo1_win"},
                            {"name": "demo2_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo2_win"},
                            {"name": "demo3_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo3_win"},
                            {"name": "demo4_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo4_win"},
                            {"name": "demo5_win.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "demo5_win"}]}""")
                    }
                }
            }
        }
    }
}
